DROP TABLE ACNT_CONTRACT CASCADE CONSTRAINTS;


CREATE TABLE CONTRACT
(
  STATE               VARCHAR(10),
  ID                  INT                NOT NULL,
  PRODUCT_CAT                VARCHAR(10),
  CON_CAT             VARCHAR(10),
  CONTRACT_NUMBER     VARCHAR(64),
  COMMENT_TEXT        VARCHAR(255),
  MAIN_PRODUCT        VARCHAR(255),
  CLIENT__ID          INT,
  CURR                VARCHAR(3),
  AMOUNT_AVAILABLE    INT,
  DATE_OPEN           DATE,
  DATE_EXPIRE         DATE,
  CARD_EXPIRE         VARCHAR(4),
  CONTR_STATUS        VARCHAR(255),
  ADD_INFO            VARCHAR(255),
  IS_READY            VARCHAR(1)
);


INSERT INTO cs.CONTRACT (STATE, ID, PRODUCT_CAT, CON_CAT, CONTRACT_NUMBER, COMMENT_TEXT, MAIN_PRODUCT, CLIENT__ID, CURR, AMOUNT_AVAILABLE, DATE_OPEN, DATE_EXPIRE, CARD_EXPIRE, CONTR_STATUS, ADD_INFO, IS_READY) VALUES ('A', 100, 'ISS', 'CARD', '6250941006528599', '', 'CHINA UNION', 100, 'VND', 10000, '2022-05-16', '2025-02-09', '2901', 'Card OK', '', 'Y');
INSERT INTO cs.CONTRACT (STATE, ID, PRODUCT_CAT, CON_CAT, CONTRACT_NUMBER, COMMENT_TEXT, MAIN_PRODUCT, CLIENT__ID, CURR, AMOUNT_AVAILABLE, DATE_OPEN, DATE_EXPIRE, CARD_EXPIRE, CONTR_STATUS, ADD_INFO, IS_READY) VALUES ('A', 200, 'ISS', 'CARD', '378282246310005', '', 'Amex', 200, 'VND', 51000, '2022-05-16', '2025-02-09', '2901', 'Card OK', '', 'Y');
INSERT INTO cs.CONTRACT (STATE, ID, PRODUCT_CAT, CON_CAT, CONTRACT_NUMBER, COMMENT_TEXT, MAIN_PRODUCT, CLIENT__ID, CURR, AMOUNT_AVAILABLE, DATE_OPEN, DATE_EXPIRE, CARD_EXPIRE, CONTR_STATUS, ADD_INFO, IS_READY) VALUES ('A', 300, 'ISS', 'CARD', '378282246310005', '', 'Amex', 300, 'VND', 511000, '2022-05-16', '2025-02-09', '2901', 'Card OK', '', 'Y');



TABLESPACE OWCONTR_D
PCTUSED    0
PCTFREE    12
INITRANS   6
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             64K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      KEEP
           )
LOGGING 
NOCOMPRESS 
CACHE;


CREATE UNIQUE INDEX ACNT_CONTR_PACK ON ACNT_CONTRACT
(SERV_PACK__ID, ID)
LOGGING
TABLESPACE OWCONTR_I
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             64K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );
CREATE UNIQUE INDEX ACNT_CONTR_PRD ON ACNT_CONTRACT
(PRODUCT, AMND_STATE, IS_READY, ID)
LOGGING
TABLESPACE OWCONTR_I
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             64K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );
CREATE UNIQUE INDEX ACNT_CONTR_SCH ON ACNT_CONTRACT
(ACC_SCHEME__ID, ID)
LOGGING
TABLESPACE OWCONTR_I
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             64K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );
CREATE UNIQUE INDEX ACNT_CONTR_SPC ON ACNT_CONTRACT
(ACNT_CONTRACT__ID, AMND_STATE, BASE_RELATION, ID)
LOGGING
TABLESPACE OWCONTR_I
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             64K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );
CREATE UNIQUE INDEX ACNT_CONTR_TYPE ON ACNT_CONTRACT
(CONTR_SUBTYPE__ID, ID)
LOGGING
TABLESPACE OWCONTR_I
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             64K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );
CREATE UNIQUE INDEX CONTRACT_CAT ON ACNT_CONTRACT
(F_I, PCAT, CCAT, AMND_STATE, BEHAVIOR_GROUP, 
REPORT_TYPE, BEHAVIOR_TYPE, ID)
LOGGING
TABLESPACE OWCONTR_I
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             64K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );
CREATE UNIQUE INDEX PK_ACNT_CONTRACT ON ACNT_CONTRACT
(ID)
LOGGING
TABLESPACE OWCONTR_I
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             64K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      KEEP
           );
CREATE UNIQUE INDEX PROD_STATUS ON ACNT_CONTRACT
(PRODUCTION_STATUS, AMND_STATE, CONTRACT_NUMBER, ID)
LOGGING
TABLESPACE OWCONTR_I
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             64K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );
CREATE UNIQUE INDEX RBS_NUMBER ON ACNT_CONTRACT
(RBS_NUMBER, AMND_STATE, ID)
LOGGING
TABLESPACE OWCONTR_I
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             64K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );
CREATE UNIQUE INDEX SCAN_CNT ON ACNT_CONTRACT
(ACNT_CONTRACT__OID, IS_READY, AMND_STATE, ID)
LOGGING
TABLESPACE OWCONTR_I
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             64K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

ALTER TABLE ACNT_CONTRACT ADD (
  CONSTRAINT PK_ACNT_CONTRACT
  PRIMARY KEY
  (ID)
  USING INDEX PK_ACNT_CONTRACT
  ENABLE VALIDATE);


CREATE INDEX ACNT_CONTRACT1 ON ACNT_CONTRACT
(CLIENT__ID, AMND_STATE)
LOGGING
TABLESPACE OWCONTR_I
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             64K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE INDEX ACNT_CONTRACT_NUMBER ON ACNT_CONTRACT
(AMND_STATE, CONTRACT_NUMBER, RELATION_TAG, BASE_RELATION, ID)
LOGGING
TABLESPACE OWCONTR_I
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             64K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      KEEP
           );

CREATE INDEX IP_ACNT_CONTRACT ON ACNT_CONTRACT
(AMND_PREV)
LOGGING
TABLESPACE OWCONTR_I
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             64K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE INDEX LIAB_CONTRACT ON ACNT_CONTRACT
(LIAB_CONTRACT)
LOGGING
TABLESPACE OWCONTR_I
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             64K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP SEQUENCE ACNT_CONTRACT_SEQ;

CREATE SEQUENCE ACNT_CONTRACT_SEQ
  START WITH 567740
  INCREMENT BY 10
  MAXVALUE 9999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  CACHE 20
  NOORDER
  NOKEEP
  NOSCALE
  GLOBAL;


CREATE OR REPLACE TRIGGER ACNT_CONTRACT_TIBS
  BEFORE INSERT ON ACNT_CONTRACT
  for each row
begin
  IF :new.ID IS NULL THEN
    if oracle_trgsupp.EnabledTo is null or sysdate >= oracle_trgsupp.EnabledTo then
      oracle_trgsupp.CHECK_ENABLED ('ACNT_CONTRACT');
    end if;
    SELECT ACNT_CONTRACT_SEQ.NEXTVAL INTO :new.ID FROM DUAL;
    oracle_trgsupp.LastId := :new.ID;
  END IF;
  IF :new.amnd_prev IS NULL THEN
    :new.amnd_prev := :new.ID;
  END IF;
  IF :new.amnd_officer IS NULL OR :new.amnd_officer = 0 THEN
    :new.amnd_officer := oracle_trgsupp.OfficerId;
  END IF;
  :new.AMOUNT_AVAILABLE:=:new.TOTAL_BALANCE-:new.TOTAL_BLOCKED-:new.AUTH_LIMIT_AMOUNT+:new.BASE_AUTH_LIMIT;
end;
/


CREATE OR REPLACE TRIGGER ACNT_CONTRACT_TUBS
  BEFORE UPDATE ON ACNT_CONTRACT
  for each row
begin
  :new.AMOUNT_AVAILABLE:=:new.TOTAL_BALANCE-:new.TOTAL_BLOCKED-:new.AUTH_LIMIT_AMOUNT+:new.BASE_AUTH_LIMIT;
end;
/


ALTER TABLE ACNT_CONTRACT ADD (
  CONSTRAINT FK_ACC_SCHEME__ACN 
  FOREIGN KEY (ACC_SCHEME__ID) 
  REFERENCES ACC_SCHEME (ID)
  ENABLE VALIDATE
,  CONSTRAINT FK_ACNT_C__BALANCE 
  FOREIGN KEY (ACNT_CONTRACT__OID) 
  REFERENCES ACNT_CONTRACT (ID)
  ON DELETE CASCADE
  ENABLE VALIDATE
,  CONSTRAINT FK_CLIENT__CONTRAC 
  FOREIGN KEY (CLIENT__ID) 
  REFERENCES CLIENT (ID)
  ENABLE VALIDATE
,  CONSTRAINT FK_CONTR_SUBTYPE__ 
  FOREIGN KEY (CONTR_SUBTYPE__ID) 
  REFERENCES CONTR_SUBTYPE (ID)
  ENABLE VALIDATE
,  CONSTRAINT FK_SERV_PACK_ACNT 
  FOREIGN KEY (SERV_PACK__ID) 
  REFERENCES SERV_PACK (ID)
  ENABLE VALIDATE);

GRANT DELETE, INSERT, UPDATE ON ACNT_CONTRACT TO MAFCR1;

GRANT DELETE, INSERT, SELECT, UPDATE ON ACNT_CONTRACT TO MAFCR1130;

GRANT SELECT ON ACNT_CONTRACT TO MAFCR1130U;

GRANT DELETE, INSERT, SELECT, UPDATE ON ACNT_CONTRACT TO MAFCR1730;

GRANT SELECT ON ACNT_CONTRACT TO MAFCR1730U;

GRANT SELECT ON ACNT_CONTRACT TO MAFCRMBS;

GRANT INSERT, SELECT, UPDATE ON ACNT_CONTRACT TO MAFCROWN;

GRANT SELECT ON ACNT_CONTRACT TO MAFCRSEL;

GRANT SELECT ON ACNT_CONTRACT TO MAFCRW4CS;
