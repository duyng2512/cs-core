DROP TABLE MAFC.CLIENT CASCADE CONSTRAINTS;

CREATE TABLE CLIENT
(
  STATE          VARCHAR(10),
  DATE_CREATED           DATE,
  ID                  int NOT NULL,
  BRANCH              VARCHAR(32),
  CLIENT_CAT          VARCHAR(20),
  PRODUCT_CAT         VARCHAR(20),
  CLIENT_NAME          VARCHAR(255),
  BIRTH_DATE          DATE,
  GENDER              VARCHAR(1),
  CLIENT_NUMBER       VARCHAR(64),
  REG_NUMBER          VARCHAR(64),
  ADDRESS_LINE        VARCHAR(255),
  PHONE               VARCHAR(32),
  FAX                 VARCHAR(32),
  E_MAIL              VARCHAR(255),
  ADD_DATE            DATE,
  ADD_INFO            VARCHAR(3900),
  IS_READY            VARCHAR(1)          DEFAULT 'N',
  PRIMARY KEY (ID)
); 

INSERT INTO cs.CLIENT (STATE, DATE_CREATED, ID, BRANCH, CLIENT_CAT, PRODUCT_CAT, CLIENT_NAME, BIRTH_DATE, GENDER, CLIENT_NUMBER, REG_NUMBER, ADDRESS_LINE, PHONE, FAX, E_MAIL, ADD_DATE, ADD_INFO, IS_READY) VALUES ('A', '2022-05-16', 100, 'HCM', 'PRIVATE', 'ISS', 'NG DUY', '1992-05-16', 'M', '100', '100', '', '0930991111', '9999', 'duyng@gmail.com', null, null, 'Y');
INSERT INTO cs.CLIENT (STATE, DATE_CREATED, ID, BRANCH, CLIENT_CAT, PRODUCT_CAT, CLIENT_NAME, BIRTH_DATE, GENDER, CLIENT_NUMBER, REG_NUMBER, ADDRESS_LINE, PHONE, FAX, E_MAIL, ADD_DATE, ADD_INFO, IS_READY) VALUES ('A', '2022-05-16', 200, 'HN', 'COMMERCIAL', 'ACQ', 'NG HAO', '1982-05-16', 'M', '200', '200', '', '09309112221', '3333', 'hao@gmail.com', null, null, 'Y');
INSERT INTO cs.CLIENT (STATE, DATE_CREATED, ID, BRANCH, CLIENT_CAT, PRODUCT_CAT, CLIENT_NAME, BIRTH_DATE, GENDER, CLIENT_NUMBER, REG_NUMBER, ADDRESS_LINE, PHONE, FAX, E_MAIL, ADD_DATE, ADD_INFO, IS_READY) VALUES ('A', '2022-05-16', 300, 'HN', 'COMMERCIAL', 'ACQ', 'NG SAN', '1977-05-16', 'F', '300', '300', '', '09309112221', '4444', 'san@gmail.com', null, null, 'Y');


TABLESPACE OWCONTR_D
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             64K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      KEEP
           )
LOGGING 
NOCOMPRESS 
CACHE;


CREATE UNIQUE INDEX CLIENT_NAME ON CLIENT
(SHORT_NAME, AMND_STATE, F_I, ID)
LOGGING
TABLESPACE OWCONTR_I
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             64K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );
CREATE UNIQUE INDEX CLIENT_NUMBER ON CLIENT
(CLIENT_NUMBER, AMND_STATE, ID)
LOGGING
TABLESPACE OWCONTR_I
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             64K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );
CREATE UNIQUE INDEX CLIENT_REG_NUM ON CLIENT
(REG_NUMBER, AMND_STATE, F_I, ID)
LOGGING
TABLESPACE OWCONTR_I
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             64K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );
CREATE UNIQUE INDEX CLIENT_ZIP_CODE ON CLIENT
(F_I, AMND_STATE, BRANCH, ID)
LOGGING
TABLESPACE OWCONTR_I
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             64K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );
CREATE UNIQUE INDEX PK_CLIENT ON CLIENT
(ID)
LOGGING
TABLESPACE OWCONTR_I
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             64K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

ALTER TABLE CLIENT ADD (
  CONSTRAINT PK_CLIENT
  PRIMARY KEY
  (ID)
  USING INDEX PK_CLIENT
  ENABLE VALIDATE);


CREATE INDEX CLIENT_AFF ON CLIENT
(AFFILIATED_WITH)
LOGGING
TABLESPACE OWCONTR_I
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             64K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE INDEX CLIENT_ITN ON CLIENT
(ITN)
LOGGING
TABLESPACE OWCONTR_I
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             64K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE INDEX CLIENT_PHONE_M ON CLIENT
(PHONE_M)
LOGGING
TABLESPACE OWCONTR_I
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             64K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE INDEX CLIENT_SSN ON CLIENT
(SOCIAL_NUMBER)
LOGGING
TABLESPACE OWCONTR_I
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             64K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE INDEX IP_CLIENT ON CLIENT
(AMND_PREV)
LOGGING
TABLESPACE OWCONTR_I
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             64K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP SEQUENCE CLIENT_SEQ;

CREATE SEQUENCE CLIENT_SEQ
  START WITH 242510
  INCREMENT BY 10
  MAXVALUE 9999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  CACHE 20
  NOORDER
  NOKEEP
  NOSCALE
  GLOBAL;


CREATE OR REPLACE TRIGGER CLIENT_TIBS
  BEFORE INSERT ON CLIENT
  for each row
begin
  IF :new.ID IS NULL THEN
    if oracle_trgsupp.EnabledTo is null or sysdate >= oracle_trgsupp.EnabledTo then
      oracle_trgsupp.CHECK_ENABLED ('CLIENT');
    end if;
    SELECT CLIENT_SEQ.NEXTVAL INTO :new.ID FROM DUAL;
    oracle_trgsupp.LastId := :new.ID;
  END IF;
  IF :new.amnd_prev IS NULL THEN
    :new.amnd_prev := :new.ID;
  END IF;
  IF :new.amnd_officer IS NULL OR :new.amnd_officer = 0 THEN
    :new.amnd_officer := oracle_trgsupp.OfficerId;
  END IF;
end;
/


GRANT DELETE, INSERT, UPDATE ON CLIENT TO MAFCR1;

GRANT DELETE, INSERT, SELECT, UPDATE ON CLIENT TO MAFCR1130;

GRANT SELECT ON CLIENT TO MAFCR1130U;

GRANT DELETE, INSERT, SELECT, UPDATE ON CLIENT TO MAFCR1730;

GRANT SELECT ON CLIENT TO MAFCR1730U;

GRANT SELECT ON CLIENT TO MAFCRMBS;

GRANT INSERT, SELECT, UPDATE ON CLIENT TO MAFCROWN;

GRANT SELECT ON CLIENT TO MAFCRSEL;

GRANT SELECT ON CLIENT TO MAFCRW4CS;
